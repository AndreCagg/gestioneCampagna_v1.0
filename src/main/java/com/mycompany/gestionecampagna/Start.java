/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.gestionecampagna;

import java.sql.*;
import java.time.*;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author caggi
 */
public class Start extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Start() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        tendina = new javax.swing.JComboBox<>();
        OK = new javax.swing.JButton();
        proprietà = new javax.swing.JButton();
        aggiorna = new javax.swing.JButton();
        terreno = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nomeMacchinatxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cvtxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cctxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        capacitatxt = new javax.swing.JTextField();
        confermaMacchina = new javax.swing.JButton();
        err2 = new javax.swing.JTextField();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        nomeAttrezzotxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        macchineAss = new javax.swing.JComboBox<>();
        confermaAttrezzi = new javax.swing.JButton();
        err3 = new javax.swing.JTextField();
        confermaAttrezzi1 = new javax.swing.JButton();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        proprietatxt = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        campotxt = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        macchinatxt = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        attrezzotxt = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        lavorazionetxt = new javax.swing.JComboBox<>();
        err5 = new javax.swing.JTextField();
        confermaManCampo = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        dataManCampotxt = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        macchinetxt = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        tipo = new javax.swing.JComboBox<>();
        toggleAtt = new javax.swing.JToggleButton();
        err7 = new javax.swing.JTextField();
        conferma = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        componente = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        note = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        dataManMactxt = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        azProprieta = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        notetxt = new javax.swing.JTextArea();
        err8 = new javax.swing.JTextField();
        confAZ = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        dataManAztxt = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        terreni = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        proprieta = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        lavorazione = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        datatxt = new javax.swing.JTextField();
        confermaCampo = new javax.swing.JButton();
        err4 = new javax.swing.JTextField();
        colturelbl = new javax.swing.JLabel();
        colturetxt = new javax.swing.JComboBox<>();
        prodottolbl = new javax.swing.JLabel();
        prodottotxt = new javax.swing.JTextField();
        quantitalbl = new javax.swing.JLabel();
        quantitatxt = new javax.swing.JTextField();
        um = new javax.swing.JComboBox<>();
        jTabbedPane6 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        err6 = new javax.swing.JTextField();
        aggiornaTab = new javax.swing.JButton();
        ispeziona = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane4.setEnabled(false);

        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentShown(evt);
            }
        });

        OK.setText("CONFERMA");

        proprietà.setText("AGGIUNGI PROPRIETA'");
        proprietà.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proprietàActionPerformed(evt);
            }
        });

        aggiorna.setText("AGGIORNA");
        aggiorna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aggiornaActionPerformed(evt);
            }
        });

        terreno.setText("AGGIUNGI TERRENO");
        terreno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terrenoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tendina, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 302, Short.MAX_VALUE)
                        .addComponent(aggiorna, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(terreno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(OK, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(proprietà, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tendina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aggiorna))
                .addGap(50, 50, 50)
                .addComponent(OK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(proprietà)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(terreno)
                .addContainerGap(262, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("tab1", jPanel2);

        jTabbedPane2.addTab("PROPRIETA'", jTabbedPane4);

        jTabbedPane1.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("NOME");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("CV");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("CC");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("CAPACITA' SERBATOIO");

        confermaMacchina.setText("CONFERMA");
        confermaMacchina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confermaMacchinaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(capacitatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nomeMacchinatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cvtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(confermaMacchina, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)))
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cctxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(267, Short.MAX_VALUE))
            .addComponent(err2)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomeMacchinatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cvtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cctxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(capacitatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77)
                .addComponent(confermaMacchina)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                .addComponent(err2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        jTabbedPane1.addTab("tab1", jPanel3);

        jTabbedPane2.addTab("MACCHINE", jTabbedPane1);

        jTabbedPane3.setEnabled(false);

        jPanel4.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel4ComponentShown(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("NOME");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("MACCHINA ASSOCIATA");

        confermaAttrezzi.setText("CONFERMA");
        confermaAttrezzi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confermaAttrezziActionPerformed(evt);
            }
        });

        confermaAttrezzi1.setText("AGGIORNA");
        confermaAttrezzi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confermaAttrezzi1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomeAttrezzotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(macchineAss, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 197, Short.MAX_VALUE))
                    .addComponent(err3))
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(confermaAttrezzi, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(confermaAttrezzi1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomeAttrezzotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(macchineAss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confermaAttrezzi)
                    .addComponent(confermaAttrezzi1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 248, Short.MAX_VALUE)
                .addComponent(err3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        jTabbedPane3.addTab("tab1", jPanel4);

        jTabbedPane2.addTab("ATTEREZZI", jTabbedPane3);

        jPanel6.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel6ComponentShown(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("CAMPO");

        proprietatxt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                proprietatxtItemStateChanged(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("PROPRIETA'");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("MACCHINA");

        macchinatxt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                macchinatxtItemStateChanged(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("ATTREZZO");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("LAVORAZIONE");

        lavorazionetxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aratura", "Fresatura" }));

        confermaManCampo.setText("CONFERMA");
        confermaManCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confermaManCampoActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("DATA");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(err5, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(proprietatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(macchinatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lavorazionetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(162, 162, 162)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dataManCampotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(campotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(attrezzotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(308, 308, 308)
                        .addComponent(confermaManCampo)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(proprietatxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(macchinatxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attrezzotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lavorazionetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataManCampotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 202, Short.MAX_VALUE)
                .addComponent(confermaManCampo)
                .addGap(39, 39, 39)
                .addComponent(err5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTabbedPane5.addTab("MANUTENZIONE CAMPO", jPanel6);

        jPanel7.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel7ComponentShown(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("MACCHINA/ATTREZZO:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("TIPO:");

        tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rottura", "Usura", "Manutenzione" }));

        toggleAtt.setText("ATTREZZI");
        toggleAtt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                toggleAttItemStateChanged(evt);
            }
        });

        err7.setEditable(false);

        conferma.setText("CONEFRMA");
        conferma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confermaActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("COMPONENTE:");

        componente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gomma/Rullo/Zappetta", "Filtro Olio", "Filtro Aria", "Filtro Gasolio/Benzina/Miscela", "Olio Motore", "Olio Cambio", "Olio Idaulico", "Batteria", "MANUTENZIONE GENERICA" }));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("NOTE:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("DATA");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(308, 308, 308)
                                .addComponent(conferma, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(componente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(err7)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(macchinetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(138, 138, 138)
                                        .addComponent(toggleAtt))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(note, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dataManMactxt, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 187, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(macchinetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toggleAtt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(componente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(note, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataManMactxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addComponent(err7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(conferma)
                .addGap(61, 61, 61))
        );

        jTabbedPane5.addTab("MANUTENZIONE MACCHINE", jPanel7);

        jPanel8.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel8ComponentShown(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("PROPRIETA'");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("NOTE");

        notetxt.setColumns(20);
        notetxt.setRows(5);
        jScrollPane2.setViewportView(notetxt);

        err8.setEditable(false);

        confAZ.setText("CONFERMA");
        confAZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confAZActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("DATA");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(358, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(azProprieta, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dataManAztxt, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(116, 116, 116))))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(311, 311, 311)
                .addComponent(confAZ, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(err8)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(azProprieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataManAztxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(confAZ)
                .addGap(37, 37, 37)
                .addComponent(err8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("MANUTENZIONE AZIENDA", jPanel8);

        jPanel5.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel5ComponentShown(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("CAMPO");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("PROPRIETA'");

        proprieta.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                proprietaItemStateChanged(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("LAVORAZIONE");

        lavorazione.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semina", "Irrigazione", "Trattamento", "Raccolta" }));
        lavorazione.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lavorazioneItemStateChanged(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("DATA (dd-MM-yyyy)");

        confermaCampo.setText("CONFERMA");
        confermaCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confermaCampoActionPerformed(evt);
            }
        });

        colturelbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        colturelbl.setText("COLTURE");

        colturetxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pomodoro", "Pomodoro da insalata", "Verza", "Zucchine", "Zucca", "Fagiolini", "Patate", "Barbabietole", "Ravanelli" }));

        prodottolbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        prodottolbl.setText("PRODOTTO");

        quantitalbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        quantitalbl.setText("QUANTITA'");

        um.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kg", "g" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(proprieta, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lavorazione, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 207, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(55, 55, 55)
                                .addComponent(terreni, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(datatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(err4)
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(275, 275, 275)
                                .addComponent(confermaCampo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(colturelbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(colturetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(prodottolbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(prodottotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(quantitalbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantitatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(um, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(terreni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proprieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lavorazione, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datatxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(colturelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(colturetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prodottolbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prodottotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantitalbl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantitatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(um, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                .addComponent(confermaCampo)
                .addGap(40, 40, 40)
                .addComponent(err4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane5.addTab("ATTIVITA' IN CAMPO", jPanel5);

        jTabbedPane2.addTab("ATTIVITA'", jTabbedPane5);

        jPanel9.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel9ComponentShown(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo", "Proprietà", "Terreno", "Data", "id"
            }
        ));
        jScrollPane1.setViewportView(table);

        err6.setEditable(false);

        aggiornaTab.setText("AGGIORNA");
        aggiornaTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aggiornaTabActionPerformed(evt);
            }
        });

        ispeziona.setText("ISPEZIONA");
        ispeziona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ispezionaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(err6)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(aggiornaTab)
                        .addGap(77, 77, 77)
                        .addComponent(ispeziona)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95)
                .addComponent(err6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aggiornaTab)
                    .addComponent(ispeziona))
                .addGap(22, 22, 22))
        );

        jTabbedPane6.addTab("ULTIME ATTIVITA", jPanel9);

        jButton1.setText("RESET");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(609, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jButton1)
                .addContainerGap(396, Short.MAX_VALUE))
        );

        jTabbedPane6.addTab("RESET", jPanel10);

        jTabbedPane2.addTab("REPORT", jTabbedPane6);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel5ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel5ComponentShown

        Connection conn = null;
        String nome = "";
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";

        try {
            conn = DriverManager.getConnection(url, user, pass);

            String find = "SELECT * FROM aziende";
            Statement trova = conn.createStatement();
            ResultSet ris = trova.executeQuery(find);

            while (ris.next()) {
                nome = ris.getString("nome");
                proprieta.addItem(nome);
            }
            conn.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }

        datatxt.setText(this.today());

        if (lavorazione.getSelectedItem().equals("Trattamento")) {
            prodottolbl.setVisible(true);
            prodottotxt.setVisible(true);
        } else {
            prodottolbl.setVisible(false);
            prodottotxt.setVisible(false);
        }

        if (lavorazione.getSelectedItem().equals("Raccolta")) {
            quantitalbl.setVisible(true);
            quantitatxt.setVisible(true);
            um.setVisible(true);
        } else {
            quantitalbl.setVisible(false);
            quantitatxt.setVisible(false);
            um.setVisible(false);
        }
    }//GEN-LAST:event_jPanel5ComponentShown

    private void confermaCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confermaCampoActionPerformed
        // TODO add your handling code here:
        Double qt = 0.0;
        String t = "", data = "", dat[], s = "";
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        Boolean b = false;

        try {

            err4.setText("");

            //controllo la data sia completa
            data = datatxt.getText();
            dat = data.split("-");
            if (Integer.parseInt(dat[0]) < 10) {
                System.out.println("gg");
                b = true;
                s = "0" + Integer.parseInt(dat[0]) + "-" + Integer.parseInt(dat[1]) + "-" + Integer.parseInt(dat[2]);
            }

            if (Integer.parseInt(dat[1]) < 10) {
                b = true;
                s = Integer.parseInt(dat[0]) + "-0" + Integer.parseInt(dat[1]) + "-" + Integer.parseInt(dat[2]);
            }

            if ((Integer.parseInt(dat[1]) < 10) && (Integer.parseInt(dat[0]) < 10)) {
                b = true;
                s = "0" + Integer.parseInt(dat[0]) + "-0" + Integer.parseInt(dat[1]) + "-" + Integer.parseInt(dat[2]);
            }

            if (!b) {
                s = Integer.parseInt(dat[0]) + "-" + Integer.parseInt(dat[1]) + "-" + Integer.parseInt(dat[2]);
                datatxt.setText(s);
            } else {
                datatxt.setText(s);
            }

            LocalDate lc = LocalDate.parse(datatxt.getText(), formatter);

            try {
                if (lavorazione.getSelectedItem().equals("Raccolta")) {
                    qt = Double.parseDouble(quantitatxt.getText());
                    err4.setText("");
                }
            } catch (NumberFormatException nf) {
                err4.setText("formato quantità errato");
            }

            Connection conn = null;

            if (lavorazione.getSelectedItem().equals("Semina")) {
                t = "semina";
            }

            if (lavorazione.getSelectedItem().equals("Irrigazione")) {
                t = "irrigazione";
            }

            if (lavorazione.getSelectedItem().equals("Trattamento")) {
                t = "trattamento";
            }

            if (lavorazione.getSelectedItem().equals("Raccolta")) {
                t = "raccolta";
            }

            String url = "jdbc:postgresql://localhost/campagna";
            String user = "postgres";
            String pass = "root";

            try {
                conn = DriverManager.getConnection(url, user, pass);
                if (conn != null) {
                    //inserimento nella tabella generale
                    String query = "INSERT INTO attivita(tabella,data) VALUES(?,?)";
                    PreparedStatement state = conn.prepareStatement(query);

                    state.setString(1, t);
                    state.setString(2, datatxt.getText());

                    state.executeUpdate();

                    //inserimento nella tabella specifica
                    if ((t.equals("semina")) || t.equals("irrigazione")) {
                        String queryS = "INSERT INTO " + t + "(proprieta,campo,data,coltura) VALUES(?,?,?,?)";
                        PreparedStatement stateS = conn.prepareStatement(queryS);

                        stateS.setString(1, proprieta.getSelectedItem().toString());
                        stateS.setString(2, terreni.getSelectedItem().toString());
                        stateS.setString(3, datatxt.getText());
                        stateS.setString(4, colturetxt.getSelectedItem().toString().toLowerCase());

                        stateS.executeUpdate();
                    }

                    if (t.equals("trattamento")) {
                        String queryS = "INSERT INTO trattamento(proprieta,campo,data,coltura,prodotto) VALUES(?,?,?,?,?)";
                        PreparedStatement stateS = conn.prepareStatement(queryS);

                        stateS.setString(1, proprieta.getSelectedItem().toString());
                        stateS.setString(2, terreni.getSelectedItem().toString());
                        stateS.setString(3, datatxt.getText());
                        stateS.setString(4, colturetxt.getSelectedItem().toString().toLowerCase());
                        stateS.setString(5, prodottotxt.getText().toLowerCase());

                        stateS.executeUpdate();
                    }

                    if (t.equals("raccolta")) {
                        String queryS = "INSERT INTO raccolta(proprieta,campo,data,coltura,raccolto,um) VALUES(?,?,?,?,?,?)";
                        PreparedStatement stateS = conn.prepareStatement(queryS);

                        stateS.setString(1, proprieta.getSelectedItem().toString());
                        stateS.setString(2, terreni.getSelectedItem().toString());
                        stateS.setString(3, datatxt.getText());
                        stateS.setString(4, colturetxt.getSelectedItem().toString().toLowerCase());
                        stateS.setString(5, qt.toString());
                        stateS.setString(6, um.getSelectedItem().toString());

                        stateS.executeUpdate();
                    }

                }
                conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }

        } catch (DateTimeParseException dt) {
            err4.setText("formato data errato");
        }
    }//GEN-LAST:event_confermaCampoActionPerformed

    private void lavorazioneItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lavorazioneItemStateChanged
        // TODO add your handling code here:
        if (lavorazione.getSelectedItem().equals("Trattamento")) {
            prodottolbl.setVisible(true);
            prodottotxt.setVisible(true);
        } else {
            prodottolbl.setVisible(false);
            prodottotxt.setVisible(false);
        }

        if (lavorazione.getSelectedItem().equals("Raccolta")) {
            quantitalbl.setVisible(true);
            quantitatxt.setVisible(true);
            um.setVisible(true);
        } else {
            quantitalbl.setVisible(false);
            quantitatxt.setVisible(false);
            um.setVisible(false);
        }
    }//GEN-LAST:event_lavorazioneItemStateChanged

    private void proprietaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_proprietaItemStateChanged
        // TODO add your handling code here:
        terreni.removeAllItems();
        Connection conn = null;
        String p, nome;
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";

        try {
            conn = DriverManager.getConnection(url, user, pass);

            String find = "SELECT * FROM terreni";
            Statement trova = conn.createStatement();
            ResultSet ris = trova.executeQuery(find);

            while (ris.next()) {
                p = ris.getString("proprieta");
                if (p.equals(proprieta.getSelectedItem())) {
                    nome = ris.getString("nome");
                    terreni.addItem(nome);
                }

            }
            conn.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_proprietaItemStateChanged

    private void jPanel6ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel6ComponentShown
        //stampa delle macchine
        Connection connM = null;
        String nome = "";
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";

        try {
            macchinatxt.removeAllItems();
            connM = DriverManager.getConnection(url, user, pass);

            String find = "SELECT * FROM macchine";
            Statement trova = connM.createStatement();
            ResultSet ris = trova.executeQuery(find);

            while (ris.next()) {
                nome = ris.getString("nome");
                macchinatxt.addItem(nome);
            }
            connM.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }

        // stampa delle azinde
        Connection conn = null;

        try {
            proprietatxt.removeAllItems();
            conn = DriverManager.getConnection(url, user, pass);

            String find = "SELECT * FROM aziende";
            Statement trova = conn.createStatement();
            ResultSet ris = trova.executeQuery(find);

            while (ris.next()) {
                nome = ris.getString("nome");
                proprietatxt.addItem(nome);
            }
            conn.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }

        //stampa della data odierna
        dataManCampotxt.setText(this.today());

        //controlli e memorizzazione attivita
    }//GEN-LAST:event_jPanel6ComponentShown

    private void confermaManCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confermaManCampoActionPerformed
        // TODO add your handling code here:
        //controllo la data sia completa
        String data, dat[], s = "";
        Boolean b = false;
        data = dataManCampotxt.getText();
        dat = data.split("-");
        try {
            try {
                if (Integer.parseInt(dat[0]) < 10) {
                    b = true;
                    s = "0" + Integer.parseInt(dat[0]) + "-" + Integer.parseInt(dat[1]) + "-" + Integer.parseInt(dat[2]);
                }

                if (Integer.parseInt(dat[1]) < 10) {
                    b = true;
                    s = Integer.parseInt(dat[0]) + "-0" + Integer.parseInt(dat[1]) + "-" + Integer.parseInt(dat[2]);
                }

                if ((Integer.parseInt(dat[1]) < 10) && (Integer.parseInt(dat[0]) < 10)) {
                    b = true;
                    s = "0" + Integer.parseInt(dat[0]) + "-0" + Integer.parseInt(dat[1]) + "-" + Integer.parseInt(dat[2]);
                }

                if (!b) {
                    s = Integer.parseInt(dat[0]) + "-" + Integer.parseInt(dat[1]) + "-" + Integer.parseInt(dat[2]);
                    dataManCampotxt.setText(s);
                } else {
                    dataManCampotxt.setText(s);
                }
                try {
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
                    LocalDate lc = LocalDate.parse(s, formatter);
                    err5.setText("");
                } catch (DateTimeParseException dt) {
                    err5.setText("formato data errato");
                }
            } catch (IndexOutOfBoundsException ob) {
                err5.setText("probabilemente la data non è completa");
            }
        } catch (NumberFormatException nf) {
            err5.setText("formato errato");
        }
        try {
            if (proprietatxt.getSelectedItem().equals(null)
                    || campotxt.getSelectedItem().equals(null)
                    || attrezzotxt.getSelectedItem().equals(null)
                    || macchinatxt.getSelectedItem().equals(null)
                    || lavorazionetxt.getSelectedItem().equals(null)) {
            } else {
                try {
                    //scrittura su tabella generica
                    Connection conn = null;

                    String url = "jdbc:postgresql://localhost/campagna", t;
                    String user = "postgres";
                    String pass = "root";
                    try {
                        conn = DriverManager.getConnection(url, user, pass);
                        if (conn != null) {

                            if (lavorazionetxt.getSelectedItem().toString().equals("Aratura")) {
                                t = "aratura";
                            } else {
                                t = "fresatura";
                            }

                            String query = "INSERT INTO attivita(tabella,data) VALUES(?,?)";
                            PreparedStatement state = conn.prepareStatement(query);
                            state.setString(1, t);
                            state.setString(2, dataManCampotxt.getText());
                            state.executeUpdate();

                            //scrittura su tabella specifica
                            String spec = "INSERT INTO " + t + "(proprieta,campo,macchina,attrezzo,data) VALUES(?,?,?,?,?)";
                            PreparedStatement state2 = conn.prepareStatement(spec);
                            state2.setString(1, proprietatxt.getSelectedItem().toString().toLowerCase());
                            state2.setString(2, campotxt.getSelectedItem().toString().toLowerCase());
                            state2.setString(3, macchinatxt.getSelectedItem().toString().toLowerCase());
                            state2.setString(4, attrezzotxt.getSelectedItem().toString().toLowerCase());
                            state2.setString(5, dataManCampotxt.getText());
                            state2.executeUpdate();
                        }
                    } catch (SQLException sql) {

                        err5.setText("errore al DB");
                    }
                    conn.close();
                } catch (SQLException sql) {
                    err5.setText("errore connessione al DB");
                }
            }

        } catch (NullPointerException np) {
            np.printStackTrace();
            err5.setText("è stato generato un errore, probabilmente dovuto al fatto che non tutti i campi sono stati completati");
        }
    }//GEN-LAST:event_confermaManCampoActionPerformed

    private void macchinatxtItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_macchinatxtItemStateChanged
        // TODO add your handling code here:
        attrezzotxt.removeAllItems();
        Connection conn = null;
        String p, nome;
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";

        try {
            conn = DriverManager.getConnection(url, user, pass);

            String find = "SELECT * FROM attrezzi";
            Statement trova = conn.createStatement();
            ResultSet ris = trova.executeQuery(find);

            while (ris.next()) {
                p = ris.getString("macchina_ass");
                if (p.equals(macchinatxt.getSelectedItem())) {
                    nome = ris.getString("nome");
                    attrezzotxt.addItem(nome);
                }

            }
            conn.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_macchinatxtItemStateChanged

    private void proprietatxtItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_proprietatxtItemStateChanged
        // TODO add your handling code here:
        campotxt.removeAllItems();
        Connection conn = null;
        String p, nome;
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";

        try {
            conn = DriverManager.getConnection(url, user, pass);

            String find = "SELECT * FROM terreni";
            Statement trova = conn.createStatement();
            ResultSet ris = trova.executeQuery(find);

            while (ris.next()) {
                p = ris.getString("proprieta");
                if (p.equals(proprietatxt.getSelectedItem())) {
                    nome = ris.getString("nome");
                    campotxt.addItem(nome);
                }

            }
            conn.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_proprietatxtItemStateChanged

    private void jPanel4ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel4ComponentShown
        // TODO add your handling code here:
        this.aggiornaMacchine();
    }//GEN-LAST:event_jPanel4ComponentShown

    private void confermaAttrezzi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confermaAttrezzi1ActionPerformed
        // TODO add your handling code here:
        macchineAss.removeAllItems();
        this.aggiornaMacchine();
    }//GEN-LAST:event_confermaAttrezzi1ActionPerformed

    private void confermaAttrezziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confermaAttrezziActionPerformed
        // TODO add your handling code here:
        Connection conn = null;

        String nome = "";
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";

        try {
            conn = DriverManager.getConnection(url, user, pass);
            try {

                if (!nomeAttrezzotxt.getText().isBlank()) {
                    nome = nomeAttrezzotxt.getText();
                } else {
                    nome = "";
                    err3.setText("è necessario inserire il nome");
                }

                if (!nome.isBlank()) {
                    String query = "INSERT INTO attrezzi(nome,macchina_ass) VALUES(?,?)";
                    PreparedStatement state = conn.prepareStatement(query);

                    state.setString(1, nome);
                    state.setString(2, macchineAss.getSelectedItem().toString());
                    state.executeUpdate();

                    conn.close();
                }
            } catch (NumberFormatException nf) {

            }
        } catch (SQLException e) {

        }
    }//GEN-LAST:event_confermaAttrezziActionPerformed

    private void confermaMacchinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confermaMacchinaActionPerformed
        // TODO add your handling code here:
        Macchina m = new Macchina();
        Connection conn = null;

        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";

        try {
            try {
                conn = DriverManager.getConnection(url, user, pass);

                if (!nomeMacchinatxt.getText().isBlank()) {
                    m.setNome(nomeMacchinatxt.getText());
                } else {
                    err2.setText("è necessario inserire il nome");
                }

                if (!cvtxt.getText().isBlank()) {
                    m.setCv(Integer.parseInt(cvtxt.getText()));
                } else {
                    err2.setText("è necessario inserire il numero di cavalli");
                }

                if (!cctxt.getText().isBlank()) {
                    m.setCc(Double.parseDouble(cctxt.getText()));
                }

                if (!capacitatxt.getText().isBlank()) {
                    m.setSerbatoio(Double.parseDouble(capacitatxt.getText()));
                }

                if (!m.getNome().isBlank() && m.getCv() > 0.0) {
                    String query = "INSERT INTO macchine(nome,cv,cc,serbatoio) VALUES(?,?,?,?)";
                    PreparedStatement state = conn.prepareStatement(query);

                    state.setString(1, m.getNome());
                    state.setString(2, m.getCv().toString());
                    state.setString(3, m.getCc().toString());
                    state.setString(4, m.getSerbatoio().toString());
                    state.executeUpdate();

                    conn.close();
                }
            } catch (NumberFormatException nf) {
                err2.setText("formato errato");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_confermaMacchinaActionPerformed

    private void jPanel2ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel2ComponentShown
        // TODO add your handling code here:
        this.aggiornaTendina();
    }//GEN-LAST:event_jPanel2ComponentShown

    private void terrenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terrenoActionPerformed
        // TODO add your handling code here:
        NewTerreno nt = new NewTerreno();
        nt.setVisible(true);
    }//GEN-LAST:event_terrenoActionPerformed

    private void aggiornaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aggiornaActionPerformed
        // TODO add your handling code here:
        tendina.removeAllItems();
        this.aggiornaTendina();
    }//GEN-LAST:event_aggiornaActionPerformed

    private void proprietàActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proprietàActionPerformed
        // TODO add your handling code here:
        NewPro np = new NewPro();
        np.setVisible(true);
    }//GEN-LAST:event_proprietàActionPerformed

    private void jPanel9ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel9ComponentShown
        // TODO add your handling code here:
        //lettura dalla tabella generale

        String tipo = "", data = "", datatrovata = "", campo = "", azienda = "";
        Connection conn = null;

        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";

        this.createTable(conn, url, user, pass, tipo, data, datatrovata, campo, azienda);
    }//GEN-LAST:event_jPanel9ComponentShown

    public void createTable(Connection conn, String url, String user, String pass, String tipo, String data, String datatrovata, String campo, String azienda) {
        ArrayList<Object[]> att = new ArrayList<Object[]>();
        String id;
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        try {
            conn = DriverManager.getConnection(url, user, pass);
            if (conn != null) {
                String find = "SELECT * FROM attivita";
                Statement trova = conn.createStatement();
                ResultSet ris = trova.executeQuery(find);

                while (ris.next()) {
                    tipo = ris.getString("tabella");
                    data = ris.getString("data");

                    //apertura della tabella specifica
                    String spec = "SELECT * FROM " + tipo;
                    Statement cerca = conn.createStatement();
                    ResultSet trovato = cerca.executeQuery(spec);

                    while (trovato.next()) {
                        datatrovata = trovato.getString("data");
                        if (data.equals(datatrovata) && !tipo.equals("manmacchine") && !tipo.equals("manazienda")) {
                            campo = trovato.getString("campo");
                            azienda = trovato.getString("proprieta");
                            id = trovato.getString("id");

                            att.add(new Object[]{tipo, azienda, campo, data, id});
                            //model.addRow(new Object[]{tipo, azienda, campo, data});
                        }
                        if (tipo.equals("manmacchine")) {
                            id = trovato.getString("id");
                            att.add(new Object[]{"manutenzione macchina", "", "", data, id});
                        }

                        if (tipo.equals("manazienda")) {
                            azienda = trovato.getString("proprieta");
                            id = trovato.getString("id");
                            att.add(new Object[]{"manutenzione azienda", azienda, "", data, id});
                        }
                    }
                }
                for (Integer i = att.size() - 1; i >= 0; i--) {
                    model.addRow(att.get(i));
                }
            }
            conn.close();
        } catch (SQLException sql) {
            sql.printStackTrace();
            err6.setText("errore al DB");
        }
    }

    private void toggleAttItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_toggleAttItemStateChanged
        // TODO add your handling code here:
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";
        Connection conn = null;

        try {
            if (toggleAtt.isSelected()) {
                macchinetxt.removeAllItems();
                this.addAttrezzo(url, user, pass, conn);
            } else {
                macchinetxt.removeAllItems();
                this.addMacchine(url, user, pass, conn);
            }
        } catch (NullPointerException ex) {

        }
    }//GEN-LAST:event_toggleAttItemStateChanged

    private void jPanel7ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel7ComponentShown
        // TODO add your handling code here:
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";
        Connection conn = null;
        this.addMacchine(url, user, pass, conn);
        dataManMactxt.setText(this.today());
    }//GEN-LAST:event_jPanel7ComponentShown

    private void confermaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confermaActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:postgresql://localhost/campagna", data = "";
        String user = "postgres";
        String pass = "root";
        Connection conn = null;
        LocalDate lc = null;
        if (macchinetxt.getSelectedItem() != null
                && tipo.getSelectedItem() != null
                && componente.getSelectedItem() != null
                && dataManMactxt.getText() != null) {

            try {
                try {
                    err7.setText("");
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
                    lc = LocalDate.parse(this.checkData(dataManMactxt.getText()), formatter);
                    data = this.checkData(dataManMactxt.getText());
                } catch (NumberFormatException nf) {
                    err7.setText("formato generico errato");
                }
            } catch (DateTimeParseException dt) {
                err7.setText("formato data errato");
            }

            //scrittura su tabella generica e specifica
            /*try {
                String query = "DELETE FROM manmacchine WHERE id=1";
                Statement state = conn.createStatement();
                state.executeUpdate(query);
            } catch (SQLException sql) {

            }*/
            try {
                conn = DriverManager.getConnection(url, user, pass);
                String query = "INSERT INTO attivita(tabella,data) VALUES(?,?)";
                PreparedStatement state = conn.prepareStatement(query);

                state.setString(1, "manmacchine");
                state.setString(2, data);
                state.executeUpdate();

                conn.close();
            } catch (SQLException sql) {
                err7.setText("errore al DB");
            }

            try {
                conn = DriverManager.getConnection(url, user, pass);
                String query = "INSERT INTO manmacchine(nome,pezzo,note,data,tipo) VALUES(?,?,?,?,?)";
                PreparedStatement state = conn.prepareStatement(query);

                state.setString(1, macchinetxt.getSelectedItem().toString().toLowerCase());
                state.setString(2, componente.getSelectedItem().toString().toLowerCase());
                state.setString(3, note.getText());
                state.setString(4, data);
                state.setString(5, tipo.getSelectedItem().toString().toLowerCase());
                state.executeUpdate();

                conn.close();
            } catch (SQLException sql) {
                err7.setText("errore al DB");
            }
        } else {
            err7.setText("è necessario completare tutti i campi");
        }
    }//GEN-LAST:event_confermaActionPerformed

    private void jPanel8ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel8ComponentShown
        // TODO add your handling code here:
        dataManAztxt.setText(this.today());
        this.addProprieta();
    }//GEN-LAST:event_jPanel8ComponentShown

    private void confAZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confAZActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:postgresql://localhost/campagna", data = "";
        String user = "postgres";
        String pass = "root";
        LocalDate lc = null;
        Connection conn = null;
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");

        if (azProprieta.getSelectedItem() != null
                && dataManAztxt.getText() != null) {
            try {
                try {
                    lc = LocalDate.parse(this.checkData(dataManAztxt.getText()), formatter);
                    data = this.checkData(dataManAztxt.getText());
                } catch (DateTimeParseException dt) {
                    err8.setText("formato data errato");
                }
            } catch (NumberFormatException nf) {
                err8.setText("formato errato");
            }

            try {
                conn = DriverManager.getConnection(url, user, pass);
                String query = "INSERT INTO attivita(tabella,data) VALUES(?,?)";
                PreparedStatement state = conn.prepareStatement(query);

                state.setString(1, "manazienda");
                state.setString(2, data);
                state.executeUpdate();

                conn.close();
            } catch (SQLException sql) {
                err8.setText("errore al DB");
            }

            try {
                conn = DriverManager.getConnection(url, user, pass);
                String query = "INSERT INTO manazienda(proprieta,note,data) VALUES(?,?,?)";
                PreparedStatement state = conn.prepareStatement(query);

                state.setString(1, azProprieta.getSelectedItem().toString().toLowerCase());
                state.setString(2, notetxt.getText());
                state.setString(3, dataManAztxt.getText());
                state.executeUpdate();

                conn.close();
            } catch (SQLException sql) {
                err8.setText("errore al DB");
            }
        } else {
            err6.setText("è necessario completare tutti i campi");
        }
    }//GEN-LAST:event_confAZActionPerformed

    private void aggiornaTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aggiornaTabActionPerformed
        // TODO add your handling code here:
        Connection conn = null;
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";
        String datatrovata = "", data = "", campo = "", azienda = "", tipo = "";

        DefaultTableModel model = (DefaultTableModel) table.getModel();
        for (Integer i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        this.createTable(conn, url, user, pass, tipo, data, datatrovata, campo, azienda);
    }//GEN-LAST:event_aggiornaTabActionPerformed

    private void ispezionaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ispezionaActionPerformed
        // TODO add your handling code here:
        String tipo, proprieta, terreno, data, id;
        DefaultTableModel model = (DefaultTableModel) table.getModel();

        tipo = model.getValueAt(table.getSelectedRow(), 0).toString();
        proprieta = model.getValueAt(table.getSelectedRow(), 1).toString();
        terreno = model.getValueAt(table.getSelectedRow(), 2).toString();
        data = model.getValueAt(table.getSelectedRow(), 3).toString();
        id = model.getValueAt(table.getSelectedRow(), 4).toString();

        
        if(tipo.equalsIgnoreCase("aratura") || tipo.equalsIgnoreCase("fresatura")){
            Aratura a=new Aratura();
            a.setProprieta(proprieta);
            a.setCampo(terreno);
            a.setDataTab(data);
            a.setId(Integer.parseInt(id));
            a.setTipo(tipo);
            
            a.setVisible(true);
        }
        
        if(tipo.equalsIgnoreCase("semina") || tipo.equalsIgnoreCase("irrigazione")){
            Semina s=new Semina();
            s.setProprieta(proprieta);
            s.setTerreno(terreno);
            s.setData(data);
            s.setId(Integer.parseInt(id));
            s.setTipo(tipo);
            s.setVisible(true);
        }
        
        if(tipo.equalsIgnoreCase("trattamento")){
            Trattamento t=new Trattamento();
            t.setProprieta(proprieta);
            t.setTerreno(terreno);
            t.setData(data);
            t.setId(Integer.parseInt(id));
            t.setTipo(tipo);
            t.setVisible(true);
        }
        
        if(tipo.equalsIgnoreCase("raccolta")){
            Raccolta r=new Raccolta();
            r.setProprieta(proprieta);
            r.setTerreno(terreno);
            r.setData(data);
            r.setId(Integer.parseInt(id));
            r.setTipo(tipo);
            r.setVisible(true);
        }
    }//GEN-LAST:event_ispezionaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //apro le attivita e le elimino
        Connection conn = null;
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";
        
        try{
            conn=DriverManager.getConnection(url, user, pass);
            
            String queryAtt="SELECT * FROM attivita";
            Statement stateAtt=conn.createStatement();
            ResultSet risAtt=stateAtt.executeQuery(queryAtt);
            
            while(risAtt.next()){
                String query="DELETE FROM "+risAtt.getString("tabella")+" WHERE data='"+risAtt.getString("data")+"'";
                Statement state=conn.createStatement();
                state.executeUpdate(query);
            }
        }catch(SQLException sql){
            sql.printStackTrace();
        }
        
        //eliminazione da attivita
        try{
            conn=DriverManager.getConnection(url, user, pass);
            
            String queryAtt="SELECT * FROM attivita";
            Statement stateAtt=conn.createStatement();
            stateAtt.executeLargeUpdate(queryAtt);
            conn.close();
        }catch(SQLException sql){
            sql.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public void addProprieta() {
        Connection conn = null;
        String nome;
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";

        try {
            conn = DriverManager.getConnection(url, user, pass);

            String find = "SELECT * FROM aziende";
            Statement trova = conn.createStatement();
            ResultSet ris = trova.executeQuery(find);

            while (ris.next()) {
                nome = ris.getString("nome");
                azProprieta.addItem(nome);
            }
            conn.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void addAttrezzo(String url, String user, String pass, Connection conn) {
        String attrezzo;
        try {
            conn = DriverManager.getConnection(url, user, pass);
            if (conn != null) {
                String find = "SELECT * FROM attrezzi";
                Statement trova = conn.createStatement();
                ResultSet ris = trova.executeQuery(find);
                while (ris.next()) {
                    attrezzo = ris.getString("nome");
                    macchinetxt.addItem(attrezzo);
                }
            }
            conn.close();
        } catch (SQLException sql) {
            err7.setText("errore al DB");
        }
    }

    public void addMacchine(String url, String user, String pass, Connection conn) {
        String macchina;
        try {
            conn = DriverManager.getConnection(url, user, pass);
            if (conn != null) {
                String find = "SELECT * FROM macchine";
                Statement trova = conn.createStatement();
                ResultSet ris = trova.executeQuery(find);
                while (ris.next()) {
                    macchina = ris.getString("nome");
                    macchinetxt.addItem(macchina);
                }
            }
            conn.close();
        } catch (SQLException sql) {
            err7.setText("errore al DB");
        }

    }

    public String checkData(String datatxt) {
        String data = "", app[] = datatxt.split("-");
        Boolean b = false;

        if (Integer.parseInt(app[0]) < 10 && app[0].length() < 2) {
            b = true;
            data = "0" + app[0] + "-" + app[1] + "-" + app[2];
        }

        if (Integer.parseInt(app[1]) < 10 && app[1].length() < 2) {
            b = true;
            data = app[0] + "-0" + app[1] + "-" + app[2];
        }
        if (!b) {
            data = app[0] + "-" + app[1] + "-" + app[2];
        }

        return data;
    }

    public String today() {
        LocalDate lc = LocalDate.now();
        String data = "";
        Boolean b = false;

        if (lc.getDayOfMonth() < 10) {
            b = true;
            data = "0" + lc.getDayOfMonth() + "-" + lc.getMonthValue() + "-" + lc.getYear();
        }

        if (lc.getMonthValue() < 10) {
            b = true;
            data = lc.getDayOfMonth() + "-0" + lc.getMonthValue() + "-" + lc.getYear();
        }
        if (!b) {
            data = lc.getDayOfMonth() + "-" + lc.getMonthValue() + "-" + lc.getYear();
        }

        return data;
    }

    public void aggiornaMacchine() {
        Connection conn = null;
        String nome = "";
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";

        try {
            conn = DriverManager.getConnection(url, user, pass);

            /*String query="INSERT INTO aziende(nome,indirizzo) VALUES('pantano','null')";
            Statement state=conn.createStatement();
            state.executeUpdate(query);*/
 /*String query="DELETE FROM macchine WHERE id=3";
            Statement state=conn.createStatement();
            state.executeUpdate(query);*/
            String find = "SELECT * FROM macchine";
            Statement trova = conn.createStatement();
            ResultSet ris = trova.executeQuery(find);

            while (ris.next()) {
                nome = ris.getString("nome");
                macchineAss.addItem(nome);
            }
            conn.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void aggiornaTendina() {
        Connection conn = null;
        String nome = "";
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";

        try {
            conn = DriverManager.getConnection(url, user, pass);

            /*String query="INSERT INTO aziende(nome,indirizzo) VALUES('pantano','null')";
            Statement state=conn.createStatement();
            state.executeUpdate(query);*/
 /*String query="DELETE FROM aziende WHERE id=3";
            Statement state=conn.createStatement();
            state.executeUpdate(query);*/
            String find = "SELECT * FROM aziende";
            Statement trova = conn.createStatement();
            ResultSet ris = trova.executeQuery(find);

            while (ris.next()) {
                nome = ris.getString("nome");
                tendina.addItem(nome);
            }
            conn.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Start().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OK;
    private javax.swing.JButton aggiorna;
    private javax.swing.JButton aggiornaTab;
    private javax.swing.JComboBox<String> attrezzotxt;
    private javax.swing.JComboBox<String> azProprieta;
    private javax.swing.JComboBox<String> campotxt;
    private javax.swing.JTextField capacitatxt;
    private javax.swing.JTextField cctxt;
    private javax.swing.JLabel colturelbl;
    private javax.swing.JComboBox<String> colturetxt;
    private javax.swing.JComboBox<String> componente;
    private javax.swing.JButton confAZ;
    private javax.swing.JButton conferma;
    private javax.swing.JButton confermaAttrezzi;
    private javax.swing.JButton confermaAttrezzi1;
    private javax.swing.JButton confermaCampo;
    private javax.swing.JButton confermaMacchina;
    private javax.swing.JButton confermaManCampo;
    private javax.swing.JTextField cvtxt;
    private javax.swing.JTextField dataManAztxt;
    private javax.swing.JTextField dataManCampotxt;
    private javax.swing.JTextField dataManMactxt;
    private javax.swing.JTextField datatxt;
    private javax.swing.JTextField err2;
    private javax.swing.JTextField err3;
    private javax.swing.JTextField err4;
    private javax.swing.JTextField err5;
    private javax.swing.JTextField err6;
    private javax.swing.JTextField err7;
    private javax.swing.JTextField err8;
    private javax.swing.JButton ispeziona;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTabbedPane jTabbedPane6;
    private javax.swing.JComboBox<String> lavorazione;
    private javax.swing.JComboBox<String> lavorazionetxt;
    private javax.swing.JComboBox<String> macchinatxt;
    private javax.swing.JComboBox<String> macchineAss;
    private javax.swing.JComboBox<String> macchinetxt;
    private javax.swing.JTextField nomeAttrezzotxt;
    private javax.swing.JTextField nomeMacchinatxt;
    private javax.swing.JTextField note;
    private javax.swing.JTextArea notetxt;
    private javax.swing.JLabel prodottolbl;
    private javax.swing.JTextField prodottotxt;
    private javax.swing.JComboBox<String> proprieta;
    private javax.swing.JComboBox<String> proprietatxt;
    private javax.swing.JButton proprietà;
    private javax.swing.JLabel quantitalbl;
    private javax.swing.JTextField quantitatxt;
    private javax.swing.JTable table;
    private javax.swing.JComboBox<String> tendina;
    private javax.swing.JComboBox<String> terreni;
    private javax.swing.JButton terreno;
    private javax.swing.JComboBox<String> tipo;
    private javax.swing.JToggleButton toggleAtt;
    private javax.swing.JComboBox<String> um;
    // End of variables declaration//GEN-END:variables
}
