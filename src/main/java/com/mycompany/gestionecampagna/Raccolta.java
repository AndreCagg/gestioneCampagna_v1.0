/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.gestionecampagna;

import java.sql.*;
import java.time.LocalDate;
;
import java.time.format.*;
import java.time.format.*;
import java.time.format.*;
import java.time.format.*;
import java.time.format.*;
import java.time.format.*;
import java.time.format.*;
import java.time.format.*;
import java.time.format.*;

/**
 *
 * @author caggi
 */


public class Raccolta extends javax.swing.JFrame {

    private Integer id;
    private String proprieta;
    private String terreno;
    private String data;
    private String tipo;

    public String getData() {
        return data;
    }

    public void setData(String data) {
        this.data = data;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getProprieta() {
        return proprieta;
    }

    public void setProprieta(String proprieta) {
        this.proprieta = proprieta;
    }

    public String getTerreno() {
        return terreno;
    }

    public void setTerreno(String terreno) {
        this.terreno = terreno;
    }

    public void setTipo(String tipo) {
        this.tipo = tipo;
    }

    public String getTipo() {
        return tipo;
    }

    /**
     * Creates new form Semina
     */
    public Raccolta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        salva = new javax.swing.JButton();
        p = new javax.swing.JComboBox<>();
        err = new javax.swing.JTextField();
        t = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        datatxt = new javax.swing.JTextField();
        modifica = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        c = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        qta = new javax.swing.JTextField();
        um = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("PROPRIETA'");

        salva.setText("SALVA");
        salva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvaActionPerformed(evt);
            }
        });

        p.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pItemStateChanged(evt);
            }
        });

        err.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("TERRENO");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("DATA");

        modifica.setText("MODIFICA");
        modifica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("COLTURE");

        c.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pomodoro", "Pomodoro da insalata", "Verza", "Zucchine", "Zucca", "Fagiolini", "Patate", "Barbabietole", "Ravanelli" }));
        c.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cItemStateChanged(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("QUANTITA'");

        um.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kg", "g" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(datatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(49, 49, 49)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(modifica, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(salva, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(qta, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(um, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(err, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(datatxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(um, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modifica)
                    .addComponent(salva))
                .addGap(18, 18, 18)
                .addComponent(err, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public String checkData(String datatxt) {
        String data = "", app[] = datatxt.split("-");
        Boolean b = false;

        if (Integer.parseInt(app[0]) < 10 && app[0].length() < 2) {
            b = true;
            data = "0" + app[0] + "-" + app[1] + "-" + app[2];
        }

        if (Integer.parseInt(app[1]) < 10 && app[1].length() < 2) {
            b = true;
            data = app[0] + "-0" + app[1] + "-" + app[2];
        }
        if (!b) {
            data = app[0] + "-" + app[1] + "-" + app[2];
        }

        return data;
    }

    private void salvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvaActionPerformed
        // TODO add your handling code here:
        if (p.getSelectedItem() != null
                && t.getSelectedItem() != null
                && c.getSelectedItem() != null
                && !datatxt.getText().isBlank()
                && !qta.getText().isBlank()) {
            err.setText("");

            //controllo della data
            try {
                try {
                    err.setText("");
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
                    LocalDate lc = LocalDate.parse(this.checkData(datatxt.getText()), formatter);
                    datatxt.setText(this.checkData(datatxt.getText()));
                } catch (DateTimeParseException dt) {
                    err.setText("errore data " + dt.getParsedString());
                }
            } catch (NumberFormatException nf) {
                err.setText("formato errato. " + nf.getMessage());
            }
        } else {
            err.setText("è necessario inserire tutti i campi");
        }

        //update del record
        Connection conn = null;
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";

        try {
            conn = DriverManager.getConnection(url, user, pass);
            String query = "DELETE FROM " + this.getTipo().toLowerCase() + " WHERE id=?";
            PreparedStatement state = conn.prepareStatement(query);

            state.setInt(1, this.getId());
            state.executeUpdate();
            conn.close();
        } catch (SQLException sql) {
            err.setText("DB error. errorcode " + sql.getErrorCode() + ", sqlstate " + sql.getSQLState());
        }

        try {
            conn = DriverManager.getConnection(url, user, pass);
            String query = "INSERT INTO " + this.getTipo().toLowerCase() + " (proprieta,campo,data,coltura,raccolto,um) VALUES(?,?,?,?,?,?)";
            PreparedStatement state = conn.prepareStatement(query);

            state.setString(1, p.getSelectedItem().toString().toLowerCase());
            state.setString(2, t.getSelectedItem().toString().toLowerCase());
            state.setString(3, datatxt.getText());
            state.setString(4, c.getSelectedItem().toString());
            state.setString(5, qta.getText());
            state.setString(6, um.getSelectedItem().toString());
            state.executeUpdate();
            conn.close();
        } catch (SQLException sql) {
            //sql.printStackTrace();
            err.setText("DB error. errorcode " + sql.getErrorCode() + ", sqlstate " + sql.getSQLState());
        }
    }//GEN-LAST:event_salvaActionPerformed

    public void addTerreni() {
        t.removeAllItems();
        Connection conn = null;
        String par, nome;
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";

        try {
            conn = DriverManager.getConnection(url, user, pass);

            String find = "SELECT * FROM terreni";
            Statement trova = conn.createStatement();
            ResultSet ris = trova.executeQuery(find);

            while (ris.next()) {
                par = ris.getString("proprieta");
                if (par.equals(p.getSelectedItem())) {
                    nome = ris.getString("nome");
                    t.addItem(nome);
                }

            }
            conn.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void pItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pItemStateChanged
        // TODO add your handling code here:
        this.addTerreni();
        t.setSelectedItem(this.getTerreno());
        t.setEnabled(false);
    }//GEN-LAST:event_pItemStateChanged

    private void modificaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificaActionPerformed
        // TODO add your handling code here:
        salva.setVisible(true);
        p.setEnabled(true);
        t.setEnabled(true);
        c.setEnabled(true);
        datatxt.setEditable(true);
        qta.setEnabled(true);
        um.setEnabled(true);
    }//GEN-LAST:event_modificaActionPerformed

    private void cItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cItemStateChanged

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        salva.setVisible(false);
        this.addProprieta();
        p.setSelectedItem(this.getProprieta());
        p.setEnabled(false);

        //aggiunta delle colture
        this.addColture();
        c.setEnabled(false);
        datatxt.setText(this.getData());
        datatxt.setEditable(false);

        //caricamento quantita
        Connection conn = null;
            String nome;
            String url = "jdbc:postgresql://localhost/campagna";
            String user = "postgres";
            String pass = "root";
            
        try {
            conn=DriverManager.getConnection(url, user, pass);
            String query="SELECT raccolto FROM raccolta WHERE id="+this.getId();
            Statement state=conn.createStatement();
            ResultSet ris=state.executeQuery(query);
            
            while(ris.next()){
                qta.setText(ris.getString("raccolto"));
            }

        }catch(SQLException sql){
            err.setText("DB error. error code " + sql.getErrorCode() + " sqlstate " + sql.getSQLState());
        }
        qta.setEnabled(false);
        //caricamento um
         try {
            conn=DriverManager.getConnection(url, user, pass);
            String query="SELECT um FROM raccolta WHERE id="+this.getId();
            Statement state=conn.createStatement();
            ResultSet ris=state.executeQuery(query);
            
            while(ris.next()){
                um.setSelectedItem(ris.getString("um"));
            }

            conn.close();
        }catch(SQLException sql){
            err.setText("DB error. error code " + sql.getErrorCode() + " sqlstate " + sql.getSQLState());
        }
         um.setEnabled(false);
    }//GEN-LAST:event_formComponentShown

    public void addProprieta() {
        Connection conn = null;
        String nome;
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";

        try {
            conn = DriverManager.getConnection(url, user, pass);

            String find = "SELECT * FROM aziende";
            Statement trova = conn.createStatement();
            ResultSet ris = trova.executeQuery(find);

            while (ris.next()) {
                nome = ris.getString("nome");
                p.addItem(nome);
            }
            conn.close();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void addColture() {
        Connection conn = null;
        String coltura;
        String url = "jdbc:postgresql://localhost/campagna";
        String user = "postgres";
        String pass = "root";

        try {
            conn = DriverManager.getConnection(url, user, pass);
            String query = "SELECT coltura FROM " + this.getTipo().toLowerCase() + " WHERE id=?";
            PreparedStatement state = conn.prepareStatement(query);

            state.setInt(1, this.getId());
            ResultSet ris = state.executeQuery();
            while (ris.next()) {
                coltura = ris.getString("coltura");
                c.setSelectedItem(coltura);
            }
            conn.close();

        } catch (SQLException sql) {
            err.setText("DB error. error code " + sql.getErrorCode() + " sqlstate " + sql.getSQLState());
            sql.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Raccolta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Raccolta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Raccolta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Raccolta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Raccolta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> c;
    private javax.swing.JTextField datatxt;
    private javax.swing.JTextField err;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton modifica;
    private javax.swing.JComboBox<String> p;
    private javax.swing.JTextField qta;
    private javax.swing.JButton salva;
    private javax.swing.JComboBox<String> t;
    private javax.swing.JComboBox<String> um;
    // End of variables declaration//GEN-END:variables

}
